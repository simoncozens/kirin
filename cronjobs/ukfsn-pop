#!/usr/bin/perl
# Run me from cron as
#  perl -I/path/to/kirin ukfsn-pop "DBI:mysql:database=email;host=localhost" email $password

use strict;
use warnings;
use constant UIDBASE => 0; # Change this if NSS settings require

my ($dsn, $user, $password) = @ARGV
    or die "You need to supply DSN, username and password";
    # It's cron, so errors will be emailed back to root - no need to send

do 'kirin.pl';

my $dbh = DBI->connect($dsn, $user, $password)
    || die "Cannot connect to database Error: $!";

Kirin->cronjobhelper("pop", "Execute"); 

package Execute;
sub create {
    my ($self, $user, $domain, $localpart, $pass) = @_;

    my $username = $user->username;
    my $address = "$localpart\@$domain";
    my $homedir = '/users/'.substr($username, 0, 1).'/'.$username;
    my $mailbox  = "$homedir/$domain/$localpart";

    my $madepopbox = `sudo /usr/local/bin/add-popbox.pl $domain $localpart $username`;
    if (!$madepopbox || $madepopbox =~ /ERR/) {
        die "Adding popbox for $localpart\@$domain give error $madepopbox";
    }

    $dbh->do("INSERT INTO virtual VALUES (?,?,?)", undef, 
        $address, $mailbox . "/Maildir/", main::UIDBASE + $user->id)
        or die "Couldn't insert into virtual ".$dbh->errstr;

    $dbh->do("INSERT INTO popbox VALUES (?,?,?,?,?)", undef, 
        $domain, $localpart, "{plain}$pass", $mailbox, $username)
        or die "Couldn't insert into popbox ".$dbh->errstr;
}

sub edit {
    my ($self, $user, $domain, $localpart, $pass) = @_;

    $dbh->do("UPDATE popbox SET password = ? 
                WHERE local = ? AND domain = ? AND owner = ?", undef,
        "{plain}$pass", $localpart, $domain, $user->username)
        or die "Couldn't update popbox ".$dbh->errstr;
}

sub delete {
    my ($self, $user, $domain, $localpart, $pass) = @_;

    my $del = "delete from popbox where local=? AND domain=? AND user=?";
    $dbh->do($del, undef, $localpart, $domain, $user->username)
        or die "Could not delete from popbox";
    my $del2 = "delete from virtual where address = ?";
    $dbh->do($del, undef, "$localpart\@$domain")
        or die "Could not delete from virtual";
}

