#!/usr/bin/perl
# Run me from cron as
#  perl -I/path/to/kirin pdns-kick "DBI:mysql:database=pdns;host=192.168..." pdns $assword

use strict;
use warnings;

my ($dsn, $user, $password) = @ARGV
    or die "You need to supply DSN, username and password";

do 'kirin.pl';

my $loader = Class::DBI::Loader->new(
    dsn => $dsn, user => $user, password => $password,
    options => {RaiseError => 1, AutoCommit => 0},
    namespace => "DNSDB");

my %done;
for my $job (Kirin::DB::Jobqueue->search(plugin => "dns")) {
    if ($job->method eq "update_server") {
        # Only do the job once per domain
        my ($user) = $job->customer->find_user;
        $done{$job->parameters}++ or kick_server($job->parameters,$user)
    }
    $job->delete;
}

sub kick_server {
    my $domain = Kirin::DB::Domain->retrieve(shift); return unless $domain;
    my @records = $domain->dns_records; return unless @records;
    my $user = shift; return unless $user;

    # Find the domain, create if necessary
    my $dns_domain = DNSDB::Domains->find_or_create(
        name => $domain->domainname,
        type => "NATIVE",
        account => $user->username
    );

    # Remove old records, replace with new.
    $_->delete for DNSDNB::Records->search(domain_id => $dns_domain->id);
    for (@records) { 
        DNSDB::Records->create({
            domain_id => $dns_domain->id,
            name => $_->name,
            type => $_->type,
            content => $_->data,
            ttl => $_->ttl,
            prio => $_->priority
        });
    }
}
