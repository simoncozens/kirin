#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.20
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1282330586',
        'name' => 'add_customer',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    #line 5 "templates/add_customer"
    if ($stash->get('adding')) {
    $output .=  "\n<h2> Add a new customer to your profile </h2>\n";
    }
    else {
    $output .=  "\n<h2>Please create your customer profile</h2>\n";
    }
    
    $output .=  "\n\n";
    #line 7 "templates/add_customer"
    
    # MACRO
    $stash->set('to_field', sub {
        my $output = '';
        my (%_tt_args, $_tt_params);
        $_tt_args{ 'x' } = shift;
        $_tt_params = shift;
        $_tt_params = { } unless ref($_tt_params) eq 'HASH';
        $_tt_params = { %_tt_args, %$_tt_params };
    
        my $stash = $context->localise($_tt_params);
        eval {
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('lower')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['x', 0, 'replace', [ ' ', '_' ]]);
        
        &$_tt_filter($output);
    };
    
        };
        $stash = $context->delocalise();
        die $@ if $@;
        return $output;
    });
    
    $output .=  "\n\n<form method=\"post\">\n<input type=\"hidden\" name=\"editing\" value=\"1\"/>\n<table>\n";
    #line 20 "templates/add_customer"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = [ 'Forename', 'Surname', 'Org', 'Address', 'Town', 'County', 'Country', 'Postcode', 'Phone', 'Fax', 'Email', 'Billing Email', 'SMS' ];
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    LOOP:   while (! $_tt_error) {
                $stash->{'thing'} = $_tt_value;
    #line 12 "templates/add_customer"
    $stash->set('f', $stash->get(['to_field', [ $stash->get('thing') ]]));
    
    $output .=  "\n<tr>\n    <th> ";
    #line 17 "templates/add_customer"
    $output .=  $stash->get('thing');
    $output .=  " </th>\n    <td class=\"editable\"><input name=\"";
    #line 18 "templates/add_customer"
    $output .=  $stash->get('f');
    $output .=  "\"></td>\n</tr>\n";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n</table>\n<input type=\"submit\" id=\"submit\" value=\"Create Customer\">\n</form>\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
