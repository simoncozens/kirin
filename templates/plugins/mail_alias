<h2>Mail aliases for [%domain.domainname%]</h2>
<table id="aliasfile">
[% SET acount = 0; FOR a = alias; %]
    <tr>
    [% IF a.0 == "comment"; %] <td class="comment" colspan="2"><i>[%a.1 |html%]</i></td>
    [% ELSE;%] 
         <td><input class="localpart" value="[% a.1 %]"></td>
            <td><table style="border:1px solid black">
         [% SET ecount = 0; FOR expansion = a.2; %]
            <tr><td><input class="autocomplete" value="[%expansion|html%]"></td>
            [% IF expansion != a.2.first %]<td class="minus">-</td>[% END %]
            [% IF expansion == a.2.last %]<td class="rhsplus">+</td>[% END %]
            </tr>
     [% END %]
            </table></td>
     [% END %]
    <td class="makecomment">#</td>
    <td class="removeline">-</td>
    <td class="insertline">+</td>
    </tr>
[% END %]
</table>
<form method="post" onsubmit="return rollup()">
    <input type="submit" value="Save">
    <input type="hidden" name="thefile" id="thefile">
</form>
<div id="dialog" title="Really remove this line?">
    <p><span class="ui-icon ui-icon-alert" style="float:left; margin:0
    7px 20px 0;"></span>There's no undo, so if you make a mistake you
    won't get it back. If you're unsure, say "No" and just comment it out
    for now.</p>
</div>
<script>
var doMinus = function() { 
        if (!$(this).parent().nextAll().length) {
            if ($(this.parentNode).prev().length) {
                $(this.parentNode).prev().append('<td class="rhsplus">+</td>').click(doPlus);
                fixActions();
            } else {
                return;
            }
        }
        $(this).parent().slideUp("slow", function () { 
            $(this).remove();
        });
}

var doPlus = function () {
        if (!this.parentNode.firstChild.firstChild.value) {
            this.parentNode.firstChild.firstChild.focus();
            return; // Hey, use the one you've got.
        }
        $(this).parent().parent().append('<tr><td><input class="autocomplete"></td><td class="minus">-</td><td class="rhsplus">+</td>');
        fixActions();
        $(this).remove();
}

function textfromtd(n) {
    if(n.attr("colspan")) {
        return n.find("i").text().replace(/\n$/,"");
    } 
    return n.children().get(0).value + ": " +
    $.map(n.next().children().find("input"),function(a){return a.value}).join(", ").replace(/\n$/,"");
}

function makeComment() {
     var toptd = $($(this.parentNode).find("td").get(0));
     if(toptd.attr("colspan")) {
        var matches = textfromtd(toptd).match(/^#\s*([^:]+):\s*(.*)/);
        var rhs = [];
        if (matches[2]) { rhs = matches[2].split(/\s*,\s*/); }
        toptd.remove();
        $(this.parentNode).prepend('<td><input/></td><td><table style="border:1px solid black"></table></td>');
        $(this.parentNode.firstChild.firstChild).val(matches[1]);
        var table = this.parentNode.firstChild.nextSibling.firstChild;
        $.map(rhs, function(t, i) {
            var extra = "";
            if (i != 0) { extra = '<td class="minus">-</td>'; }
            if (i == rhs.length - 1) { extra = extra + '<td class="rhsplus">+</td>'; }
            $(table).append('<tr><td><input class="autocomplete"/></td>'+extra+'</tr>');
            table.firstChild.lastChild.firstChild.firstChild.value = t;
        });
     } else {
        var text = "# "+ textfromtd(toptd);
        $(toptd.children().get(0)).remove();
        toptd.next().remove();
        toptd.remove();
        $(this.parentNode).prepend("<td class=\"comment\" colspan=\"2\"><i></i></td>");
        $(this.parentNode.firstChild.firstChild).text(text);
     }
     fixActions();
}

function removeLine() {
        var tokill = this.parentNode;   
        $("#dialog").dialog("option","buttons", {
            Yes: function() { $(this).dialog('close'); $(tokill).remove(); },
            No: function() { $(this).dialog('close'); }
        }).dialog("open");
}

function insertLine() {
   var insertafter = this.parentNote; 
   $(insertafter).after('
    <tr>
         <td><input class="localpart"></td>
            <td><table style="border:1px solid black">
            <tr><td><input class="autocomplete"></td>
            <td class="rhsplus">+</td>
            </tr>
            </table></td>

    <td class="makecomment">#</td>
    <td class="removeline">-</td>
    <td class="insertline">+</td>
    </tr>
');
    fixActions();
}

$("#dialog").dialog({
    bgiframe: true,
    autoOpen: false,
    resizable: false,
    height: 290,
    modal: true,
    overlay: {
        backgroundColor: '#000',
        opacity: 0.5
    },
    buttons: {
        Yes: function() { $(this).dialog('close'); },
        No: function() { $(this).dialog('close'); }
    }
});

function rollup() {
    // Any sanity checks?
    $("#thefile").val($("#aliasfile").children().children().find("td:first").map(function(){return textfromtd($(this))}).get().join("\n"));
    return true;
}

  function fixActions () {
    var localparts = $(".localpart").map(function () {return $(this).val()+'@[%domain.domainname%]'}).get()
      $(".autocomplete").autocomplete(localparts);
      $(".minus").click(doMinus);
      $(".rhsplus").click(doPlus);
      $(".makecomment").click(makeComment);
      $(".removeline").click(removeLine);
      $(".insert").click(insertLine);
      $(".localpart").blur(fixActions);

  }
  $(document).ready(function(){
      fixActions();
    });

</script>
