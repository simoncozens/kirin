#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.20
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1282330586',
        'name' => 'plugins/package/list',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    #line 12 "templates/plugins/package/list"
    
    # MACRO
    $stash->set('edit_package_basics', sub {
        my $output = '';
        my (%_tt_args, $_tt_params);
        @_tt_args{ 'label', 'p' } = splice(@_, 0, 2);
        $_tt_params = shift;
        $_tt_params = { } unless ref($_tt_params) eq 'HASH';
        $_tt_params = { %_tt_args, %$_tt_params };
    
        my $stash = $context->localise($_tt_params);
        eval {
    
    $output .=  "\n<p>";
    #line 2 "templates/plugins/package/list"
    $output .=  $stash->get(['self', 0, 'arg', 0, 'currency', 0]);
    $output .=  " <input name=\"cost\" value=\"";
    #line 2 "templates/plugins/package/list"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['p', 0, 'cost', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\"> / \n    <select name=\"duration\">\n        <option value=\"month\" ";
    #line 4 "templates/plugins/package/list"
    if ($stash->get(['p', 0, 'duration', 0]) eq 'month') {
    $output .=  "selected";
    }
    
    $output .=  ">Month</option>\n        <option value=\"year\" ";
    #line 5 "templates/plugins/package/list"
    if ($stash->get(['p', 0, 'duration', 0]) eq 'year') {
    $output .=  "selected";
    }
    
    $output .=  ">Year</option>\n    </select>\n<input type=\"submit\" value=\"";
    #line 7 "templates/plugins/package/list"
    $output .=  $stash->get('label');
    $output .=  "\">\n</p>\n<p>Category: <input name=\"category\" value=\"";
    #line 9 "templates/plugins/package/list"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['p', 0, 'category', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\"></p>\n<p>Description:</p>\n<textarea name=\"description\" style=\"width:80%; min-height:120px\">";
    #line 11 "templates/plugins/package/list"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['p', 0, 'description', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</textarea>\n";
        };
        $stash = $context->delocalise();
        die $@ if $@;
        return $output;
    });
    
    $output .=  "\n\n<h2> Packages available </h2>\n<select id=\"catSelect\" onchange=\"changeCategory()\">\n    ";
    #line 18 "templates/plugins/package/list"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('categories');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    LOOP:   while (! $_tt_error) {
                $stash->{'c'} = $_tt_value;
    $output .=  "\n    <option ";
    #line 17 "templates/plugins/package/list"
    if ($stash->get('c') eq 'hosting') {
    $output .=  'selected';
    }
    
    $output .=  " value=\"";
    #line 17 "templates/plugins/package/list"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('c');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">";
    #line 17 "templates/plugins/package/list"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('ucfirst')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('c');
        
        &$_tt_filter($output);
    };
    
        
        &$_tt_filter($output);
    };
    
    $output .=  "</option>\n    ";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n</select>\n";
    #line 90 "templates/plugins/package/list"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('packages');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    LOOP:   while (! $_tt_error) {
                $stash->{'p'} = $_tt_value;
    $output .=  "\n<div class=\"package ";
    #line 21 "templates/plugins/package/list"
    $output .=  $stash->get(['p', 0, 'category', 0]);
    $output .=  "\">\n<h3> ";
    #line 22 "templates/plugins/package/list"
    $output .=  $stash->get(['p', 0, 'name', 0]);
    $output .=  " </h3>\n";
    #line 23 "templates/plugins/package/list"
    $stash->set('this_subscription', $stash->get(['self', 0, 'customer', 0, 'subscriptions', [ 'package', $stash->get(['p', 0, 'id', 0]) ]]));
    #line 51 "templates/plugins/package/list"
    if ($stash->get('this_subscription')) {
    
    $output .=  "\n    <form method=\"post\">\n    ";
    #line 34 "templates/plugins/package/list"
    if ($stash->get(['this_subscription', 0, 'expired', 0])) {
    $output .=  "\n    <p>(This subscription has <b>expired</b>)</p>\n    <input type=\"hidden\" value=\"";
    #line 28 "templates/plugins/package/list"
    $output .=  $stash->get(['this_subscription', 0, 'id', 0]);
    $output .=  "\" name=\"renewsubscription\">\n    <input type=\"submit\" value=\"Renew\">\n    ";
    }
    else {
    $output .=  "\n    <p>(Expires ";
    #line 31 "templates/plugins/package/list"
    $output .=  $stash->get(['this_subscription', 0, 'expires', 0]);
    $output .=  ")</p>\n    <input type=\"hidden\" value=\"";
    #line 32 "templates/plugins/package/list"
    $output .=  $stash->get(['this_subscription', 0, 'id', 0]);
    $output .=  "\" name=\"cancelsubscription\">\n    <input type=\"submit\" value=\"Cancel\">\n    ";
    }
    
    $output .=  "\n    </form>\n\n ";
    }
    else {
    $output .=  "\n    ";
    #line 46 "templates/plugins/package/list"
    if ($stash->get(['self', 0, 'user', 0, 'is_root', 0])) {
    $output .=  "\n        <form method=\"post\" action=\"edit\">\n        <input type=\"hidden\" value=\"";
    #line 40 "templates/plugins/package/list"
    $output .=  $stash->get(['p', 0, 'id', 0]);
    $output .=  "\" name=\"editpackage\">\n        ";
    #line 41 "templates/plugins/package/list"
    $output .=  $stash->get(['edit_package_basics', [ 'Edit Package', $stash->get('p') ]]);
    $output .=  "\n        </form>\n    ";
    }
    else {
    $output .=  "\n        <p>";
    #line 44 "templates/plugins/package/list"
    $output .=  $stash->get(['self', 0, 'arg', 0, 'currency', 0]);
    #line 44 "templates/plugins/package/list"
    $output .=  $stash->get(['p', 0, 'cost', 0]);
    $output .=  "/";
    #line 44 "templates/plugins/package/list"
    $output .=  $stash->get(['p', 0, 'duration', 0]);
    $output .=  "</p>\n        <p>";
    #line 45 "templates/plugins/package/list"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html_para')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['p', 0, 'description', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</p>\n    ";
    }
    
    $output .=  "\n    <form method=\"post\" action=\"buyproduct\">\n<input type=\"hidden\" value=\"";
    #line 48 "templates/plugins/package/list"
    $output .=  $stash->get(['p', 0, 'id', 0]);
    $output .=  "\" name=\"buyproduct\">\n<input type=\"submit\" value=\"Buy\">\n</form>\n";
    }
    
    $output .=  "\n    ";
    #line 88 "templates/plugins/package/list"
    if ($stash->get(['self', 0, 'user', 0, 'is_root', 0])) {
    $output .=  "\n        <table>\n            <tr><th>Name</th><th>Plugin</th><th>Parameter</th></tr>\n            ";
    #line 68 "templates/plugins/package/list"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['p', 0, 'services', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    LOOP:   while (! $_tt_error) {
                $stash->{'service'} = $_tt_value;
    $output .=  "\n            <tr>\n                <td> ";
    #line 57 "templates/plugins/package/list"
    $output .=  $stash->get(['service', 0, 'name', 0]);
    $output .=  " </td>\n                <td> ";
    #line 58 "templates/plugins/package/list"
    $output .=  $stash->get(['service', 0, 'plugin', 0]);
    $output .=  " </td>\n                <td> ";
    #line 59 "templates/plugins/package/list"
    $output .=  $stash->get(['service', 0, 'parameter', 0]);
    $output .=  " </td>\n                <td>\n                <form method=\"post\" action=\"edit\">\n                    <input type=\"hidden\" name=\"package\" value=\"";
    #line 62 "templates/plugins/package/list"
    $output .=  $stash->get(['p', 0, 'id', 0]);
    $output .=  "\">\n                    <input type=\"hidden\" name=\"dropfrompackage\" value=\"";
    #line 63 "templates/plugins/package/list"
    $output .=  $stash->get(['service', 0, 'id', 0]);
    $output .=  "\">\n                    <input type=\"submit\" value=\"Drop\">\n                </form>\n                </td>\n            </tr>\n            ";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n            <form method=\"post\" action=\"edit\">\n                <input type=\"hidden\" name=\"addtopackage\" value=\"";
    #line 70 "templates/plugins/package/list"
    $output .=  $stash->get(['p', 0, 'id', 0]);
    $output .=  "\">\n                <tr>\n                <td><input name=\"name\"></td>\n                <td><input name=\"plugin\"></td>\n                <td><input name=\"parameter\"></td>\n                <td><input type=\"submit\" value=\"Add\">\n                </tr>\n            </form>\n        </table>\n    ";
    }
    else {
    $output .=  "\n    <div class=\"detailswrapper\"><a onclick=\"showDetails(this)\"> Details</a><div class=\"details\">\n        <ul>\n        ";
    #line 84 "templates/plugins/package/list"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['p', 0, 'services', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    LOOP:   while (! $_tt_error) {
                $stash->{'service'} = $_tt_value;
    $output .=  "\n            <li> ";
    #line 83 "templates/plugins/package/list"
    $output .=  $stash->get(['service', 0, 'name', 0]);
    $output .=  "  </li>\n        ";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n        </ul>\n    </div>\n    </div>\n    ";
    }
    
    $output .=  "\n</div>\n";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n\n";
    #line 101 "templates/plugins/package/list"
    if ($stash->get(['self', 0, 'user', 0, 'is_root', 0])) {
    $output .=  "\n<h2> Add a new package </h2>\n\n    <form method=\"post\" action=\"edit\">\n    <input type=\"hidden\" name=\"create\" value=\"1\">\n    <p>Name: <input name=\"name\"></p>\n    ";
    #line 98 "templates/plugins/package/list"
    $output .=  $stash->get(['edit_package_basics', [ 'Create Package' ]]);
    $output .=  "\n    </form>\n\n";
    }
    
    $output .=  "\n<script>\n\$(\".details\").hide();\n\$(\".package\").hide();\n\$(\".hosting\").show();\nfunction changeCategory() {\n    \$(\".package\").hide(\"slow\");\n    \$(\".\"+\$(\"#catSelect\")[0].value).show(\"slow\");\n}\n\nfunction showDetails(e) { \n    \$(e.nextSibling).toggle(\"slow\") }\n</script>\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
