#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.20
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1282330586',
        'name' => 'plugins/domain/list',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n<h2> Domain management </h2>\n";
    #line 15 "templates/plugins/domain/list"
    if ($stash->get(['domains', 0, 'size', 0])) {
    $output .=  "\n<h3>You can edit the following domains</h3>\n\n<table>\n";
    #line 13 "templates/plugins/domain/list"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('domains');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    LOOP:   while (! $_tt_error) {
                $stash->{'d'} = $_tt_value;
    $output .=  "\n    <tr> <th> ";
    #line 8 "templates/plugins/domain/list"
    $output .=  $stash->get(['d', 0, 'domainname', 0]);
    $output .=  " </th>\n    ";
    #line 11 "templates/plugins/domain/list"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('relations');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    LOOP:   while (! $_tt_error) {
                $stash->{'r'} = $_tt_value;
    $output .=  "\n        <td> <a href=\"/";
    #line 10 "templates/plugins/domain/list"
    $output .=  $stash->get(['r', 0, 'name', 0]);
    $output .=  "/";
    #line 10 "templates/plugins/domain/list"
    $output .=  $stash->get(['r', 0, 'default_action', 0]);
    $output .=  "/";
    #line 10 "templates/plugins/domain/list"
    $output .=  $stash->get(['d', 0, 'id', 0]);
    $output .=  "\">";
    #line 10 "templates/plugins/domain/list"
    $output .=  $stash->get(['r', 0, 'user_name', 0]);
    $output .=  "</a> </td>\n    ";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n    </tr>\n";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n</table>\n";
    }
    
    $output .=  "\n\n";
    #line 25 "templates/plugins/domain/list"
    if ($stash->get('can_add_more')) {
    $output .=  "\n\n<h3> Add a new domain </h3>\n\n<form method=\"post\"><input type=\"hidden\" value=\"1\" name=\"adding\">\nName: <input name=\"domainname\">\n<input type=\"submit\" value=\"Add\">\n</form>\n";
    }
    
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
