#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.20
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1282330586',
        'name' => 'plugins/database/list',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n<h2>Your databases</h2>\n\n";
    #line 12 "templates/plugins/database/list"
    
    # MACRO
    $stash->set('add_form', sub {
        my $_tt_params = $_[0] if ref($_[0]) eq 'HASH';
        my $output = '';
    
        my $stash = $context->localise($_tt_params);
        eval {
    $output .=  "\n<form method=\"post\">\n    <input type=\"hidden\" name=\"adding\" value=\"1\">\n    <p>Database name: ";
    #line 7 "templates/plugins/database/list"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('username')  . '_';
        
        &$_tt_filter($output);
    };
    
    $output .=  "<input name=\"dbname\"></p>\n    <p>Password: <input name=\"pass1\" type=\"password\"></p>\n    <p>Confirm password: <input name=\"pass2\" type=\"password\"></p>\n    <input type=\"submit\" value=\"Create\">\n</form>\n";
        };
        $stash = $context->delocalise();
        die $@ if $@;
        return $output;
    });
    
    $output .=  "\n\n";
    #line 32 "templates/plugins/database/list"
    if ($stash->get(['databases', 0, 'size', 0]) > 0) {
    $output .=  "\n\n<table>\n<tr><th>Name</th><th>Username</th><th>Password</th></tr>\n    ";
    #line 24 "templates/plugins/database/list"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('databases');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    LOOP:   while (! $_tt_error) {
                $stash->{'d'} = $_tt_value;
    $output .=  "\n        <tr><td>";
    #line 19 "templates/plugins/database/list"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['d', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</td>\n            <td>";
    #line 20 "templates/plugins/database/list"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['d', 0, 'username', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</td>\n            <td>";
    #line 21 "templates/plugins/database/list"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['d', 0, 'password', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</td>\n            <td><a href=\"/database/delete/";
    #line 22 "templates/plugins/database/list"
    $output .=  $stash->get(['d', 0, 'id', 0]);
    $output .=  "\">x</a></td>\n        </tr>\n    ";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n</table>\n";
    }
    else {
    #line 32 "templates/plugins/database/list"
    if ($stash->get('addable')) {
    $output .=  "\n<p>You don't seem to have any databases; perhaps you'd like to add one:</p>\n";
    #line 28 "templates/plugins/database/list"
    $output .=  $stash->get('add_form');
    $output .=  "\n";
    }
    else {
    $output .=  "\n<p>Your account does not allow you to add any databases; perhaps you'd\nlike to <a href=\"/package/list\">upgrade</p> your account.\n";
    }
    
    }
    
    $output .=  "\n\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
