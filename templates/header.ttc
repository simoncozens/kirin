#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.20
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1282330586',
        'name' => 'header',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "<html>\n    <head>\n    <title> Kirin </title>\n    <link type=\"text/css\" href=\"/static/kirin.css\" rel=\"stylesheet\" />\n    <link type=\"text/css\" href=\"/static/jquery.autocomplete.css\" rel=\"stylesheet\" />\n    <link type=\"text/css\" href=\"http://jqueryui.com/latest/themes/base/ui.all.css\" rel=\"stylesheet\" /> \n    <script type=\"text/javascript\" src=\"/static/jquery.min.js\"></script>\n    <script type=\"text/javascript\" src=\"/static/jquery.autocomplete.js\"></script>\n    <script type=\"text/javascript\" src=\"http://ajax.googleapis.com/ajax/libs/jqueryui/1.7.2/jquery-ui.min.js\"></script>\n    </head>\n<body>\n<div id=\"header\">\n    <img src=\"/static/kirin.png\" id=\"kirinpng\">\n    <h1> Kirin </h1>\n    <p> Domain management software </p>\n</div>\n<div id=\"panel\">\n<div class=\"customerselect\">\n";
    #line 41 "templates/header"
    if ($stash->get(['self', 0, 'user', 0])) {
    $output .=  "\n    Logged in as ";
    #line 20 "templates/header"
    $output .=  $stash->get(['self', 0, 'user', 0, 'username', 0]);
    $output .=  ", administering\n    ";
    #line 34 "templates/header"
    if ($stash->get(['customers', 0, 'size', 0]) > 1) {
    $output .=  "\n    <select id=\"customerSelect\" onchange=\"changeCustomer()\">\n        ";
    #line 25 "templates/header"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('customers');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    LOOP:   while (! $_tt_error) {
                $stash->{'c'} = $_tt_value;
    $output .=  "\n            <option ";
    #line 24 "templates/header"
    if ($stash->get(['self', 0, 'customer', 0, 'id', 0]) eq $stash->get(['c', 0, 'id', 0])) {
    $output .=  "selected";
    }
    
    $output .=  " value=\"";
    #line 24 "templates/header"
    $output .=  $stash->get(['c', 0, 'id', 0]);
    $output .=  "\">";
    #line 24 "templates/header"
    $output .=  $stash->get(['c', 0, 'forename', 0]);
    #line 24 "templates/header"
    $output .=  ' ';
    #line 24 "templates/header"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['c', 0, 'surname', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</option>\n        ";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n    </select>\n    <script>\n        function changeCustomer() {\n            var loc = document.location + \"\";\n            loc = loc.replace(/\\?cid=.*/, \"\");\n            document.location = loc+\"?cid=\"+\$(\"#customerSelect\")[0].value;\n        }\n    </script>\n    ";
    }
    else {
    #line 34 "templates/header"
    $output .=  $stash->get(['self', 0, 'customer', 0, 'forename', 0]);
    #line 34 "templates/header"
    $output .=  ' ';
    #line 34 "templates/header"
    $output .=  $stash->get(['self', 0, 'customer', 0, 'surname', 0]);
    }
    
    $output .=  "\n    <a href=\"/logout\">Logout</a>\n</div>\n<ul>\n    ";
    #line 39 "templates/header"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['self', 0, 'plugins', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    LOOP:   while (! $_tt_error) {
                $stash->{'i'} = $_tt_value;
    #line 38 "templates/header"
    # USE
    $stash->set('k',
                $context->plugin('Class', [ $stash->get('i') ]));
    
    $output .=  "\n    ";
    #line 39 "templates/header"
    if ($stash->get(['k', 0, 'exposed_to', [ $stash->get(['self', 0, 'user', 0]) ]])) {
    $output .=  " <li><a href=\"/";
    #line 39 "templates/header"
    $output .=  $stash->get(['k', 0, 'name', 0]);
    $output .=  "/";
    #line 39 "templates/header"
    $output .=  $stash->get(['k', 0, 'default_action', 0]);
    $output .=  "\">";
    #line 39 "templates/header"
    $output .=  $stash->get(['k', 0, 'user_name', 0]);
    $output .=  "</a> ";
    }
    ;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n</ul>\n";
    }
    
    $output .=  "\n</div>\n<div id=\"main\">\n    ";
    #line 50 "templates/header"
    if ($stash->get(['self', 0, 'messages', 0, 'size', 0])) {
    $output .=  "\n    <ul class=\"messages\">\n        ";
    #line 48 "templates/header"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['self', 0, 'messages', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    LOOP:   while (! $_tt_error) {
                $stash->{'m'} = $_tt_value;
    $output .=  "\n            <li> ";
    #line 47 "templates/header"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('m');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</li>\n        ";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n    </ul>\n    ";
    }
    
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
